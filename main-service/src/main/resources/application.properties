spring.application.name=main-service
server.port=8888

spring.cloud.config.server.git.uri=https://github.com/eduardowalderrama/rocketseat-config-server.git
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.searchPaths=config
spring.cloud.config.server.prefix=/config

eureka.client.registerWithEureka=false
eureka.client.fetchRegistry=false
eureka.instance.hostname=localhost
eureka.server.enableSelfPreservation=false


# Configuracao centralizada
# -> armazenar, gerenciar e distribuir as configs dos services em um unico local
# -> garante que todos os services que compoem o app tenham acesso as mesmas configuracoes
# -> consistencia e unificacao das configuracoes
# -> cada um dos services consome essas configuracoes centralizadas
# -> Spring Cloud Config Server

# cloud config server => configuracoes
# Servidor => service discovery => eureka
# conseguir descobrir dinamicamente as outras instancias de services que compoem o nosso app distribuido

# login (chamada direta (https://...) para o service de mensageria

# -- mensageria (dispara email)

# meuservice.com.br/envia-mensagem
# meuservice.com.ar/envia-la-mensaje

# -- lista de services disponiveis:
# -- login
# -- mensagem